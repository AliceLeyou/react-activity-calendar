"use strict";(globalThis.webpackChunkreact_activity_calendar=globalThis.webpackChunkreact_activity_calendar||[]).push([[559],{"./src/component/ActivityCalendar.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ActivityLevels:()=>ActivityLevels,ColorThemes:()=>ColorThemes,Customization:()=>Customization,DateRanges:()=>DateRanges,Default:()=>Default,EventHandlers:()=>EventHandlers,ExplicitThemes:()=>ExplicitThemes,Loading:()=>Loading,LocalizedLabels:()=>LocalizedLabels,MondayAsWeekStart:()=>MondayAsWeekStart,NarrowScreens:()=>NarrowScreens,Tooltips:()=>Tooltips,WeekdayLabels:()=>WeekdayLabels,WithoutLabels:()=>WithoutLabels,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ActivityCalendar_stories});var Tooltip=__webpack_require__("./node_modules/.pnpm/@mui+material@5.14.17_@emotion+react@11.11.1_@emotion+styled@11.11.0_@types+react@18.2.36_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Tooltip/Tooltip.js"),react=__webpack_require__("./node_modules/.pnpm/@storybook+addon-links@7.5.3_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/addon-links/dist/react/index.mjs"),dist=__webpack_require__("./node_modules/.pnpm/@storybook+blocks@7.5.3_@types+react-dom@18.2.14_@types+react@18.2.36_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/blocks/dist/index.mjs"),node_modules_react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),react_tooltip_min=__webpack_require__("./node_modules/.pnpm/react-tooltip@5.22.0_react-dom@18.2.0_react@18.2.0/node_modules/react-tooltip/dist/react-tooltip.min.mjs"),esm=(__webpack_require__("./node_modules/.pnpm/react-tooltip@5.22.0_react-dom@18.2.0_react@18.2.0/node_modules/react-tooltip/dist/react-tooltip.min.css"),__webpack_require__("./node_modules/.pnpm/storybook-dark-mode@3.0.1_@types+react-dom@18.2.14_@types+react@18.2.36_react-dom@18.2.0_react@18.2.0/node_modules/storybook-dark-mode/dist/esm/index.js")),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const Container=({children})=>(0,jsx_runtime.jsx)("div",{style:{margin:"1rem 0 2rem"},children});Container.displayName="Container",Container.__docgenInfo={description:"",methods:[],displayName:"Container"};const components_Container=Container,event_handlersraw_namespaceObject="<ActivityCalendar\n  data={data}\n  eventHandlers={{\n    onClick: (event) => (activity) => {\n      alert(JSON.stringify(activity));\n    },\n    onMouseEnter: (event) => (activity) => {\n      console.log('on mouse enter');\n    },\n  }}\n/>\n",themesraw_namespaceObject="const explicitTheme: ThemeInput = {\n  light: ['#f0f0f0', '#c4edde', '#7ac7c4', '#f73859', '#384259'],\n  dark: ['#383838', '#4D455D', '#7DB9B6', '#F5E9CF', '#E96479'],\n};\n\n<ActivityCalendar data={data} theme={explicitTheme} />\n\nconst minimalTheme: ThemeInput = {\n  light: ['hsl(0, 0%, 92%)', 'rebeccapurple'],\n  // for `dark` the default theme will be used\n};\n\n<ActivityCalendar data={data} theme={minimalTheme} />\n",tooltips_reactraw_namespaceObject="import { Tooltip as ReactTooltip } from 'react-tooltip';\nimport 'react-tooltip/dist/react-tooltip.css';\n\n<ActivityCalendar\n  data={data}\n  renderBlock={(block, activity) =>\n    React.cloneElement(block, {\n      'data-tooltip-id': 'react-tooltip',\n      'data-tooltip-html': `${activity.count} activities on ${activity.date}`,\n    })\n  }\n/>\n\n<ReactTooltip id=\"react-tooltip\" />\n";var parseISO=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/parseISO/index.js"),getDay=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getDay/index.js"),subWeeks=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/subWeeks/index.js"),nextDay=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/nextDay/index.js"),differenceInCalendarDays=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/differenceInCalendarDays/index.js"),eachDayOfInterval=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/eachDayOfInterval/index.js"),formatISO=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/formatISO/index.js"),getMonth=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getMonth/index.js"),startOfYear=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/startOfYear/index.js"),endOfYear=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/endOfYear/index.js");const NAMESPACE="react-activity-calendar",DEFAULT_MONTH_LABELS=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],DEFAULT_LABELS={months:DEFAULT_MONTH_LABELS,weekdays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],totalCount:"{{count}} activities in {{year}}",legend:{less:"Less",more:"More"}};function groupByWeeks(activities,weekStart=0){if(0===activities.length)return[];const normalizedActivities=function fillHoles(activities){const dateMap={};for(const activity of activities)dateMap[activity.date]=activity;return(0,eachDayOfInterval.Z)({start:(0,parseISO.Z)(activities[0].date),end:(0,parseISO.Z)(activities[activities.length-1].date)}).map((day=>{const date=(0,formatISO.Z)(day,{representation:"date"});return dateMap[date]?dateMap[date]:{date,count:0,level:0}}))}(activities),firstDate=(0,parseISO.Z)(normalizedActivities[0].date),firstCalendarDate=(0,getDay.Z)(firstDate)===weekStart?firstDate:(0,subWeeks.Z)((0,nextDay.Z)(firstDate,weekStart),1),paddedActivities=[...Array((0,differenceInCalendarDays.Z)(firstDate,firstCalendarDate)).fill(void 0),...normalizedActivities],numberOfWeeks=Math.ceil(paddedActivities.length/7);return Array(numberOfWeeks).fill(void 0).map(((_,weekIndex)=>paddedActivities.slice(7*weekIndex,7*weekIndex+7)))}function getMonthLabels(weeks,monthNames=DEFAULT_MONTH_LABELS){return weeks.reduce(((labels,week,weekIndex)=>{const firstActivity=week.find((activity=>void 0!==activity));if(!firstActivity)throw new Error(`Unexpected error: Week ${weekIndex+1} is empty: [${week}].`);const month=monthNames[(0,getMonth.Z)((0,parseISO.Z)(firstActivity.date))],prevLabel=labels[labels.length-1];return 0===weekIndex||prevLabel.label!==month?[...labels,{weekIndex,label:month}]:labels}),[]).filter((({weekIndex},index,labels)=>0===index?labels[1]&&labels[1].weekIndex-weekIndex>=3:index!==labels.length-1||weeks.slice(weekIndex).length>=3))}function getClassName(name,styles){return styles?`${NAMESPACE}__${name} ${styles}`:`${NAMESPACE}__${name}`}function generateData(args){const maxLevel=args.maxLevel?Math.max(1,args.maxLevel):4,now=new Date;return(0,eachDayOfInterval.Z)(args.interval??{start:(0,startOfYear.Z)(now),end:(0,endOfYear.Z)(now)}).map((date=>{const c=Math.round(20*Math.random()-16*Math.random()),count=Math.max(0,c),level=Math.ceil(count/20*maxLevel);return{date:(0,formatISO.Z)(date,{representation:"date"}),count,level}}))}function maxWeekdayLabelLength(firstWeek,weekStart,labels,fontSize){return firstWeek.reduce(((maxLength,_,index)=>{if(index%2!=0){const dayIndex=(index+weekStart)%7,curLength=Math.ceil(function calcTextDimensions(text,fontSize){if("undefined"==typeof document||"undefined"==typeof window)throw new Error("calcTextDimensions() requires browser APIs");if(fontSize<1)throw new RangeError("fontSize must be positive");if(0===text.length)return{width:0,height:0};const namespace="http://www.w3.org/2000/svg",svg=document.createElementNS(namespace,"svg");svg.style.position="absolute",svg.style.visibility="hidden",svg.style.fontFamily=window.getComputedStyle(document.body).fontFamily,svg.style.fontSize=`${fontSize}px`;const textNode=document.createElementNS(namespace,"text");textNode.textContent=text,svg.appendChild(textNode),document.body.appendChild(svg);const boundingBox=textNode.getBBox();return document.body.removeChild(svg),{width:boundingBox.width,height:boundingBox.height}}(labels[dayIndex],fontSize).width);return Math.max(maxLength,curLength)}return maxLength}),0)}var chroma=__webpack_require__("./node_modules/.pnpm/chroma-js@2.4.2/node_modules/chroma-js/chroma.js"),chroma_default=__webpack_require__.n(chroma),getYear=__webpack_require__("./node_modules/.pnpm/date-fns@2.30.0/node_modules/date-fns/esm/getYear/index.js");var injectStylesIntoStyleTag=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.3_webpack@5.89.0/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.3_webpack@5.89.0/node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.3_webpack@5.89.0/node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.3_webpack@5.89.0/node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.3_webpack@5.89.0/node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/.pnpm/style-loader@3.3.3_webpack@5.89.0/node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles_module=__webpack_require__("./node_modules/.pnpm/css-loader@6.8.1_webpack@5.89.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/.pnpm/sass-loader@13.3.2_sass@1.69.5_webpack@5.89.0/node_modules/sass-loader/dist/cjs.js!./src/styles/styles.module.css"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles_module.Z,options);const styles_styles_module=styles_module.Z&&styles_module.Z.locals?styles_module.Z.locals:void 0;function createTheme(input,size=5){const defaultTheme=function createDefaultTheme(size){return{light:createColorScale(["hsl(0, 0%, 92%)","hsl(0, 0%, 26%)"],size),dark:createColorScale(["hsl(0, 0%, 20%)","hsl(0, 0%, 92%)"],size)}}(size);return input?(function validateTheme(input,size){if("object"!=typeof input||void 0===input.light&&void 0===input.dark)throw new Error(`The theme object must contain at least one of the fields "light" and "dark" with exactly 2 or ${size} colors respectively.`);if(input.light){const{length}=input.light;if(2!==length&&length!==size)throw new Error(`theme.light must contain exactly 2 or ${size} colors, ${length} passed.`)}if(input.dark){const{length}=input.dark;if(2!==length&&length!==size)throw new Error(`theme.dark must contain exactly 2 or ${size} colors, ${length} passed.`)}}(input,size),input.light=input.light??defaultTheme.light,input.dark=input.dark??defaultTheme.dark,{light:isColorScale(input.light,size)?input.light:createColorScale(input.light,size),dark:isColorScale(input.dark,size)?input.dark:createColorScale(input.dark,size)}):defaultTheme}function isColorScale(colors,size){const invalidColor=colors.find((color=>!chroma_default().valid(color)));if(invalidColor)throw new Error(`Invalid color "${invalidColor}" passed. All CSS color formats are accepted.`);return colors.length===size}function createColorScale(colors,size){return chroma_default().scale(colors).mode("lch").colors(size)}const ActivityCalendar=({data,blockMargin=4,blockRadius=2,blockSize=12,colorScheme,eventHandlers={},fontSize=14,hideColorLegend=!1,hideMonthLabels=!1,hideTotalCount=!1,labels:labelsProp,maxLevel=4,loading=!1,renderBlock,showWeekdayLabels=!1,style:styleProp={},theme:themeProp,totalCount:totalCountProp,weekStart=0})=>{const theme=createTheme(themeProp,(maxLevel=Math.max(1,maxLevel))+1),systemColorScheme=function useColorScheme(){const[colorScheme,setColorScheme]=(0,node_modules_react.useState)("light"),onChange=event=>setColorScheme(event.matches?"dark":"light");return(0,node_modules_react.useEffect)((()=>{const mediaQuery=window.matchMedia("(prefers-color-scheme: dark)");return setColorScheme(mediaQuery.matches?"dark":"light"),mediaQuery.addEventListener("change",onChange),()=>{mediaQuery.removeEventListener("change",onChange)}}),[]),colorScheme}(),colorScale=theme[colorScheme??systemColorScheme],useAnimation=!function usePrefersReducedMotion(){const[prefersReducedMotion,setPrefersReducedMotion]=(0,node_modules_react.useState)(!0);return(0,node_modules_react.useEffect)((()=>{const mediaQuery=window.matchMedia("(prefers-reduced-motion: reduce)");setPrefersReducedMotion(mediaQuery.matches);const onChange=event=>{setPrefersReducedMotion(event.matches)};return mediaQuery.addEventListener("change",onChange),()=>{mediaQuery.removeEventListener("change",onChange)}}),[]),prefersReducedMotion}();if(loading&&(data=function generateEmptyData(){const year=(new Date).getFullYear();return(0,eachDayOfInterval.Z)({start:new Date(year,0,1),end:new Date(year,11,31)}).map((date=>({date:(0,formatISO.Z)(date,{representation:"date"}),count:0,level:0})))}()),0===data.length)return null;const year=(0,getYear.Z)((0,parseISO.Z)(data[0]?.date)),weeks=groupByWeeks(data,weekStart),labels=Object.assign({},DEFAULT_LABELS,labelsProp),labelHeight=hideMonthLabels?0:fontSize+8,weekdayLabelOffset=showWeekdayLabels?maxWeekdayLabelLength(weeks[0],weekStart,labels.weekdays,fontSize)+8:void 0;function getEventHandlers(activity){return Object.keys(eventHandlers).reduce(((handlers,key)=>({...handlers,[key]:event=>eventHandlers[key]?.(event)(activity)})),{})}const{width,height}=function getDimensions(){return{width:weeks.length*(blockSize+blockMargin)-blockMargin,height:labelHeight+7*(blockSize+blockMargin)-blockMargin}}(),containerStyles={fontSize,...useAnimation&&{[`--${NAMESPACE}-loading`]:colorScale[0],[`--${NAMESPACE}-loading-active`]:"light"===colorScheme?chroma_default()(colorScale[0]).darken(.3).hex():chroma_default()(colorScale[0]).brighten(.25).hex()}};return(0,jsx_runtime.jsxs)("article",{className:`${NAMESPACE} ${styles_styles_module.container}`,style:{...styleProp,...containerStyles},children:[(0,jsx_runtime.jsx)("div",{className:getClassName("scroll-container",styles_styles_module.scrollContainer),children:(0,jsx_runtime.jsxs)("svg",{width,height,viewBox:`0 0 ${width} ${height}`,className:getClassName("calendar",styles_styles_module.calendar),style:{marginLeft:weekdayLabelOffset},children:[!loading&&function renderLabels(){return!showWeekdayLabels&&hideMonthLabels?null:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[showWeekdayLabels&&(0,jsx_runtime.jsx)("g",{className:getClassName("legend-weekday"),children:weeks[0].map(((_,index)=>{if(index%2==0)return null;const dayIndex=(index+weekStart)%7;return(0,jsx_runtime.jsx)("text",{x:-8,y:labelHeight+(blockSize+blockMargin)*index+blockSize/2,dominantBaseline:"middle",textAnchor:"end",children:labels.weekdays[dayIndex]},index)}))}),!hideMonthLabels&&(0,jsx_runtime.jsx)("g",{className:getClassName("legend-month"),children:getMonthLabels(weeks,labels.months).map((({label,weekIndex})=>(0,jsx_runtime.jsx)("text",{x:(blockSize+blockMargin)*weekIndex,dominantBaseline:"hanging",children:label},weekIndex)))})]})}(),function renderCalendar(){return weeks.map(((week,weekIndex)=>week.map(((activity,dayIndex)=>{if(!activity)return null;if(activity.level<0||activity.level>maxLevel)throw new RangeError(`Provided activity level ${activity.level} for ${activity.date} is out of range. It must be between 0 and ${maxLevel}.`);const style=loading&&useAnimation?{animation:`${styles_styles_module.loadingAnimation} 1.75s ease-in-out infinite`,animationDelay:20*weekIndex+20*dayIndex+"ms"}:void 0,block=(0,jsx_runtime.jsx)("rect",{...getEventHandlers(activity),x:0,y:labelHeight+(blockSize+blockMargin)*dayIndex,width:blockSize,height:blockSize,rx:blockRadius,ry:blockRadius,fill:colorScale[activity.level],"data-date":activity.date,"data-level":activity.level,style});return(0,jsx_runtime.jsx)(node_modules_react.Fragment,{children:renderBlock?renderBlock(block,activity):block},activity.date)})))).map(((week,x)=>(0,jsx_runtime.jsx)("g",{transform:`translate(${(blockSize+blockMargin)*x}, 0)`,children:week},x)))}()]})}),function renderFooter(){if(hideTotalCount&&hideColorLegend)return null;const totalCount="number"==typeof totalCountProp?totalCountProp:data.reduce(((sum,activity)=>sum+activity.count),0);return(0,jsx_runtime.jsxs)("footer",{className:getClassName("footer",styles_styles_module.footer),style:{marginLeft:weekdayLabelOffset},children:[loading&&(0,jsx_runtime.jsx)("div",{children:" "}),!loading&&!hideTotalCount&&(0,jsx_runtime.jsx)("div",{className:getClassName("count"),children:labels.totalCount?labels.totalCount.replace("{{count}}",String(totalCount)).replace("{{year}}",String(year)):`${totalCount} activities in ${year}`}),!loading&&!hideColorLegend&&(0,jsx_runtime.jsxs)("div",{className:getClassName("legend-colors",styles_styles_module.legendColors),children:[(0,jsx_runtime.jsx)("span",{style:{marginRight:"0.4em"},children:labels?.legend?.less??"Less"}),Array(maxLevel+1).fill(void 0).map(((_,level)=>(0,jsx_runtime.jsx)("svg",{width:blockSize,height:blockSize,children:(0,jsx_runtime.jsx)("rect",{width:blockSize,height:blockSize,fill:colorScale[level],rx:blockRadius,ry:blockRadius})},level))),(0,jsx_runtime.jsx)("span",{style:{marginLeft:"0.4em"},children:labels?.legend?.more??"More"})]})]})}()]})};ActivityCalendar.displayName="ActivityCalendar";const Skeleton=props=>(0,jsx_runtime.jsx)(ActivityCalendar,{data:[],...props});Skeleton.displayName="Skeleton",ActivityCalendar.__docgenInfo={description:"",methods:[],displayName:"ActivityCalendar",props:{blockMargin:{defaultValue:{value:"4",computed:!1},required:!1,tsType:{name:"number"},description:"Margin between blocks in pixels."},blockRadius:{defaultValue:{value:"2",computed:!1},required:!1,tsType:{name:"number"},description:"Border radius of blocks in pixels."},blockSize:{defaultValue:{value:"12",computed:!1},required:!1,tsType:{name:"number"},description:"Block size in pixels."},colorScheme:{defaultValue:{value:"undefined",computed:!0},required:!1,tsType:{name:"union",raw:"'light' | 'dark'",elements:[{name:"literal",value:"'light'"},{name:"literal",value:"'dark'"}]},description:"Use a specific color scheme instead of the system one. Supported values\nare `'light'` and `'dark'`."},eventHandlers:{defaultValue:{value:"{}",computed:!1},required:!1,tsType:{name:"EventHandlerMap"},description:"Event handlers to register for the SVG `<rect>` elements that are used to\nrender the calendar days. Handler signature: `event => activity => void`"},fontSize:{defaultValue:{value:"14",computed:!1},required:!1,tsType:{name:"number"},description:"Font size for text in pixels."},hideColorLegend:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Toggle to hide color legend below calendar."},hideMonthLabels:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Toggle to hide month labels above calendar."},hideTotalCount:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Toggle to hide the total count below calendar."},labels:{defaultValue:{value:"undefined",computed:!0},required:!1,tsType:{name:"Labels"},description:"Localization strings for all calendar labels.\n\n`totalCount` supports the placeholders `{{count}}` and `{{year}}`."},maxLevel:{defaultValue:{value:"4",computed:!1},required:!1,tsType:{name:"number"},description:"Maximum activity level (zero indexed)."},loading:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Toggle for loading state. `data` property will be ignored if set."},renderBlock:{defaultValue:{value:"undefined",computed:!0},required:!1,tsType:{name:"signature",type:"function",raw:"(block: BlockElement, activity: Activity) => ReactElement",signature:{arguments:[{name:"block",type:{name:"BlockElement"}},{name:"activity",type:{name:"Activity"}}],return:{name:"ReactElement"}}},description:"Render prop for calendar blocks (activities). For example, useful to wrap\nthe element with a tooltip component. Use `React.cloneElement` to pass\nadditional props to the element if necessary."},showWeekdayLabels:{defaultValue:{value:"false",computed:!1},required:!1,tsType:{name:"boolean"},description:"Toggle to show weekday labels left to the calendar."},style:{defaultValue:{value:"{}",computed:!1},required:!1,tsType:{name:"CSSProperties"},description:"Style object to pass to component container."},theme:{defaultValue:{value:"undefined",computed:!0},required:!1,tsType:{name:"ThemeInput"},description:"Set the calendar colors for the light and dark system color scheme.\nDefine each color scale explicitly with five colors or pass exactly two\ncolors (the lowest and highest intensity) to calculate a single-hue scale.\nColors can be specified in any valid CSS format.\n\nThe colors for at least one scheme must be set. If undefined, the default\ntheme is used. By default, the calendar will select the current system color\nscheme, but you can enforce a specific scheme with the `colorScheme` prop.\n\nExample:\n\n```tsx\n<ActivityCalendar\n  data={data}\n  theme={{\n    light: ['hsl(0, 0%, 92%)', 'firebrick'],\n    dark: ['#333', 'rgb(214, 16, 174)'],\n  }}\n/>\n```"},totalCount:{defaultValue:{value:"undefined",computed:!0},required:!1,tsType:{name:"number"},description:"Overwrite the total activity count."},weekStart:{defaultValue:{value:"0",computed:!1},required:!1,tsType:{name:"WeekDay"},description:"Index of day to be used as start of week. 0 represents Sunday."},data:{required:!0,tsType:{name:"Array",elements:[{name:"Activity"}],raw:"Array<Activity>"},description:'List of calendar entries. Every `Activity` object requires an ISO 8601\n`date` string in the format `yyyy-MM-dd`, a `count` property with the\namount of tracked data and a `level` property in the range `0-maxLevel`\nto specify activity intensity. The `maxLevel` prop is 4 by default.\n\nFor missing dates, no activity is assumed. This allows choosing the start\nand end date of the calendar arbitrarily by passing empty entries as the\nfirst and last item.\n\nExample object:\n\n```json\n{\n  date: "2021-02-20",\n  count: 16,\n  level: 3\n}\n```'}}};const component_ActivityCalendar=ActivityCalendar;Skeleton.__docgenInfo={description:"",methods:[],displayName:"Skeleton"};const defaultProps={blockMargin:4,blockRadius:2,blockSize:12,fontSize:14,hideColorLegend:!1,hideMonthLabels:!1,hideTotalCount:!1,loading:!1,maxLevel:4,showWeekdayLabels:!1,weekStart:0},ActivityCalendar_stories={title:"React Activity Calendar",component:component_ActivityCalendar,decorators:[(Story,{args})=>(args.colorScheme=(0,esm.vs)()?"dark":"light",(0,jsx_runtime.jsx)(Story,{}))],parameters:{controls:{sort:"requiredFirst"},layout:"centered"},argTypes:{data:{control:!1},blockMargin:{control:{type:"range",min:0,max:20}},blockRadius:{control:{type:"range",min:0,max:20}},blockSize:{control:{type:"range",min:4,max:30,step:1}},colorScheme:{control:!1},fontSize:{control:{type:"range",min:6,max:32,step:2}},maxLevel:{control:{type:"range",min:1,max:9}},style:{control:!1},weekStart:{options:[0,1,2,3,4,5,6],control:{type:"select",labels:{0:"Sunday (0)",1:"Monday (1)",2:"Tuesday (2)",3:"Wednesday (3)",4:"Thursday (4)",5:"Friday (5)",6:"Saturday (6)"}}}}},explicitTheme={light:["#f0f0f0","#c4edde","#7ac7c4","#f73859","#384259"],dark:["hsl(0, 0%, 22%)","#4D455D","#7DB9B6","#F5E9CF","#E96479"]},Default={args:defaultProps,render:args=>(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel})}),parameters:{docs:{source:{code:"<ActivityCalendar data={data} />"}}}},Loading={args:{...defaultProps,data:[],loading:!0},parameters:{docs:{source:{code:"<ActivityCalendar data={data} loading />"}}}},ActivityLevels={args:{...defaultProps,maxLevel:2},render:args=>(0,jsx_runtime.jsxs)(components_Container,{children:[(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,theme:{light:["hsl(0, 0%, 92%)","#980043"]},data:generateData({maxLevel:args.maxLevel}),style:{marginBottom:"2rem"}}),(0,jsx_runtime.jsxs)("p",{children:["Use the"," ",(0,jsx_runtime.jsx)("code",{children:(0,jsx_runtime.jsx)("b",{children:"maxLevel"})})," ","prop to control the number of activity levels. This value is zero indexed (0 represents no activity), so for example a ",(0,jsx_runtime.jsx)("code",{children:"maxLevel"})," of 2 will total in 3 levels as above. Each activity level must be in the interval from 0 to ",(0,jsx_runtime.jsx)("code",{children:"maxLevel"})," which is 4 per default."]})]}),parameters:{docs:{source:{code:"<ActivityCalendar data={data} maxLevel={2} loading />"}}}},DateRanges={args:defaultProps,parameters:{controls:{exclude:["maxLevel"]}},render:args=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel,interval:{start:new Date(2022,5,1),end:new Date(2023,4,31)}}),labels:{totalCount:"{{count}} activities in 2022 & 2023"}}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel,interval:{start:new Date(2023,2,8),end:new Date(2023,7,1)}})}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:[{date:"2023-06-14",count:2,level:1},{date:"2023-06-22",count:16,level:3},{date:"2023-07-05",count:3,level:1},{date:"2023-07-17",count:10,level:2}]})]})},ColorThemes={args:{...defaultProps,theme:{light:["hsl(0, 0%, 92%)","rebeccapurple"],dark:["hsl(0, 0%, 22%)","hsl(225,92%,77%)"]}},parameters:{docs:{source:{code:themesraw_namespaceObject}}},render:args=>(0,jsx_runtime.jsxs)(components_Container,{children:[(0,jsx_runtime.jsx)("h1",{children:"Color themes"}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel}),style:{margin:"2rem 0"}}),(0,jsx_runtime.jsxs)("p",{children:["Use the"," ",(0,jsx_runtime.jsx)("code",{children:(0,jsx_runtime.jsx)("b",{children:"theme"})})," ","prop to configure the calendar colors for the light and dark system"," ",(0,jsx_runtime.jsx)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme",children:"color scheme"}),". Define each color scale"," ",(0,jsx_runtime.jsx)(react.Z,{kind:"react-activity-calendar",name:"explicit-theme",children:"explicitly"})," ","by settings all colors (5 per default) or pass exactly two colors (the lowest and highest intensity) to calculate a single-hue scale. For explicit themes the color count must match the number of activity levels, which is controlled by the"," ",(0,jsx_runtime.jsx)(react.Z,{kind:"react-activity-calendar",name:"date-ranges",children:(0,jsx_runtime.jsx)("code",{children:"maxLevel"})})," ","prop. Colors can be specified in any valid CSS format."]}),(0,jsx_runtime.jsxs)("p",{children:["The colors for at least one scheme must be set. If undefined, the default theme is used. By default, the calendar will select the current system color scheme, but you can enforce a specific scheme with the"," ",(0,jsx_runtime.jsx)("a",{href:"/?path=/docs/react-activity-calendar--docs",children:(0,jsx_runtime.jsx)("code",{children:"colorScheme"})})," ","prop."]}),(0,jsx_runtime.jsx)(Source,{code:themesraw_namespaceObject})]})},ExplicitThemes={args:{...defaultProps,theme:explicitTheme},parameters:{controls:{exclude:["maxLevel"]},docs:{source:{code:"<ActivityCalendar\n  data={data}\n  theme={{\n    light: ['#f0f0f0', '#c4edde', '#7ac7c4', '#f73859', '#384259'],\n    dark: ['#383838', '#4D455D', '#7DB9B6', '#F5E9CF', '#E96479'],\n  }}\n/>\n"}}},render:args=>(0,jsx_runtime.jsxs)(components_Container,{children:[(0,jsx_runtime.jsx)("h1",{children:"Explicit theme"}),(0,jsx_runtime.jsx)("p",{}),(0,jsx_runtime.jsxs)("p",{children:["See the"," ",(0,jsx_runtime.jsx)(react.Z,{kind:"react-activity-calendar",name:"color-themes",children:"WithTheme"})," ","story for details how to use the ",(0,jsx_runtime.jsx)("code",{children:"theme"})," prop."]}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:4}),style:{marginTop:"2rem"}})]})},Customization={args:{...defaultProps,blockSize:14,blockRadius:7,blockMargin:5,fontSize:16,theme:explicitTheme},render:args=>(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel})}),parameters:{controls:{exclude:["maxLevel"]},docs:{source:{code:"<ActivityCalendar\n  data={data}\n  blockSize={14}\n  blockRadius={7}\n  blockMargin={5}\n  fontSize={16}\n  theme={{\n    light: ['#f0f0f0', '#c4edde', '#7ac7c4', '#f73859', '#384259'],\n    dark: ['#383838', '#4D455D', '#7DB9B6', '#F5E9CF', '#E96479'],\n  }}\n/>\n"}}}},EventHandlers={args:{...defaultProps,eventHandlers:{onClick:()=>activity=>alert(JSON.stringify(activity)),onMouseEnter:()=>()=>console.log("on mouse enter")}},parameters:{docs:{source:{code:event_handlersraw_namespaceObject}}},render:args=>(0,jsx_runtime.jsxs)(components_Container,{children:[(0,jsx_runtime.jsx)("h1",{children:"Event Handlers"}),(0,jsx_runtime.jsxs)("p",{children:["You can register event handlers for the SVG ",(0,jsx_runtime.jsx)("code",{children:"<rect/>"})," elements that are used to render the calendar days. This way you can control the behaviour on click, hover, etc. All event listeners have the following signature, so you can use the activity data of the block inside the handler:"]}),(0,jsx_runtime.jsx)(Source,{code:"type EventHandler = (event: React.SyntheticEvent) => (activity: Activity) => void;\n\ninterface Activity {\n  date: string;\n  count: number;\n  level: 0 | 1 | 2 | 3 | 4;\n}\n"}),(0,jsx_runtime.jsx)("p",{children:"Click on any block below to see it in action:"}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel}),style:{margin:"2rem 0"}}),(0,jsx_runtime.jsx)(Source,{code:event_handlersraw_namespaceObject})]})},Tooltips={args:defaultProps,parameters:{docs:{source:{code:tooltips_reactraw_namespaceObject}}},render:args=>(0,jsx_runtime.jsxs)(components_Container,{children:[(0,jsx_runtime.jsx)("h1",{children:"Tooltip Examples"}),(0,jsx_runtime.jsxs)("p",{children:["To add a 3rd party tooltip component to the calendar you can use the"," ",(0,jsx_runtime.jsx)("code",{children:"renderBlock"})," prop."]}),(0,jsx_runtime.jsx)("h2",{children:(0,jsx_runtime.jsx)("a",{href:"https://mui.com/material-ui/react-tooltip/",children:"Material UI"})}),(0,jsx_runtime.jsxs)("p",{children:["In the simplest case, each block only needs to be wrapped with a"," ",(0,jsx_runtime.jsx)("code",{children:"<Tooltip/>"})," component, as shown here for Material UI:"]}),(0,jsx_runtime.jsx)(Source,{code:"import { Tooltip as MuiTooltip } from '@mui/material';\n\n<ActivityCalendar\n  data={data}\n  renderBlock={(block, activity) => (\n    <MuiTooltip\n      title={`${activity.count} activities on ${activity.date}`}\n    >\n      {block}\n    </MuiTooltip>\n  )}\n/>\n"}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel}),renderBlock:(block,activity)=>(0,jsx_runtime.jsx)(Tooltip.Z,{title:`${activity.count} activities on ${activity.date}`,children:block})}),(0,jsx_runtime.jsx)("h2",{children:(0,jsx_runtime.jsx)("a",{href:"https://github.com/ReactTooltip/react-tooltip",children:"react-tooltip"})}),(0,jsx_runtime.jsxs)("p",{children:["Some libraries, like ",(0,jsx_runtime.jsx)("code",{children:"react-tooltip"}),", require that additional props are passed to the block elements. You can achieve this using the ",(0,jsx_runtime.jsx)("code",{children:"React.cloneElement"})," function:"]}),(0,jsx_runtime.jsx)(Source,{code:tooltips_reactraw_namespaceObject}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel}),renderBlock:(block,activity)=>(0,node_modules_react.cloneElement)(block,{"data-tooltip-id":"react-tooltip","data-tooltip-html":`${activity.count} activities on ${activity.date}`})}),(0,jsx_runtime.jsx)(react_tooltip_min.u,{id:"react-tooltip"})]})},WithoutLabels={args:{...defaultProps,hideMonthLabels:!0,hideColorLegend:!0,hideTotalCount:!0},render:args=>(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel})}),parameters:{docs:{source:{code:"<ActivityCalendar data={data} hideMonthLabels hideColorLegend hideTotalCount />"}}}},WeekdayLabels={args:{...defaultProps,showWeekdayLabels:!0},render:args=>(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel})}),parameters:{docs:{source:{code:"<ActivityCalendar data={data} showWeekdayLabels />"}}}},LocalizedLabels={args:{...defaultProps,showWeekdayLabels:!0,labels:{months:["Jan","Feb","Mär","Apr","Mai","Jun","Jul","Aug","Sep","Okt","Nov","Dez"],weekdays:["So","Mo","Di","Mi","Do","Fr","Sa"],totalCount:"{{count}} Aktivitäten in {{year}}",legend:{less:"Weniger",more:"Mehr"}}},parameters:{docs:{source:{code:"<ActivityCalendar\n  data={data}\n  labels={{\n    months: [\n      'Jan',\n      'Feb',\n      'Mär',\n      'Apr',\n      'Mai',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Okt',\n      'Nov',\n      'Dez',\n    ],\n    weekdays: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n    totalCount: '{{count}} Aktivitäten in {{year}}',\n    legend: {\n      less: 'Weniger',\n      more: 'Mehr',\n    },\n  }}\n/>\n"}}},render:args=>(0,jsx_runtime.jsxs)(components_Container,{children:[(0,jsx_runtime.jsx)("h1",{children:"Localization"}),(0,jsx_runtime.jsx)("p",{children:"(Example in German)"}),(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel}),style:{margin:"2rem 0"}}),(0,jsx_runtime.jsx)(Source,{code:"// Shape of `labels` property (default values).\n// All properties are optional.\nconst labels = {\n  months: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ],\n  weekdays: [\n    'Sun', // Sunday first!\n    'Mon',\n    'Tue',\n    'Wed',\n    'Thu',\n    'Fri',\n    'Sat',\n  ],\n  totalCount: '{{count}} activities in {{year}}',\n  legend: {\n    less: 'Less',\n    more: 'More',\n  },\n};\n",language:"jsx"})]})},MondayAsWeekStart={args:{...defaultProps,weekStart:1},render:args=>(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel})}),parameters:{docs:{source:{code:"<ActivityCalendar data={data} weekStart={1} />"}}}},NarrowScreens={args:defaultProps,parameters:{docs:{source:{code:"<ActivityCalendar data={data} />"}}},render:args=>(0,jsx_runtime.jsx)("div",{style:{width:480,maxWidth:"100%",border:"dashed 1px #929292"},children:(0,jsx_runtime.jsx)(component_ActivityCalendar,{...args,data:generateData({maxLevel:args.maxLevel})})})},Source=({code,language="tsx"})=>(0,jsx_runtime.jsx)(dist.Hw,{code,dark:(0,esm.vs)(),language});Source.displayName="Source",Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: defaultProps,\n  render: args => <ActivityCalendar {...args} data={generateData({\n    maxLevel: args.maxLevel\n  })} />,\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} />'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}},Loading.parameters={...Loading.parameters,docs:{...Loading.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    data: [],\n    loading: true\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} loading />'\n      }\n    }\n  }\n}",...Loading.parameters?.docs?.source}}},ActivityLevels.parameters={...ActivityLevels.parameters,docs:{...ActivityLevels.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    maxLevel: 2\n  },\n  render: args => <Container>\n      <ActivityCalendar {...args} theme={{\n      light: ['hsl(0, 0%, 92%)', '#980043']\n    }} data={generateData({\n      maxLevel: args.maxLevel\n    })} style={{\n      marginBottom: '2rem'\n    }} />\n\n      <p>\n        Use the{' '}\n        <code>\n          <b>maxLevel</b>\n        </code>{' '}\n        prop to control the number of activity levels. This value is zero indexed (0 represents no\n        activity), so for example a <code>maxLevel</code> of 2 will total in 3 levels as above. Each\n        activity level must be in the interval from 0 to <code>maxLevel</code> which is 4 per\n        default.\n      </p>\n    </Container>,\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} maxLevel={2} loading />'\n      }\n    }\n  }\n}",...ActivityLevels.parameters?.docs?.source}}},DateRanges.parameters={...DateRanges.parameters,docs:{...DateRanges.parameters?.docs,source:{originalSource:"{\n  args: defaultProps,\n  parameters: {\n    // maxLevel cannot be used for static data\n    controls: {\n      exclude: ['maxLevel']\n    }\n  },\n  render: args => <>\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel,\n      interval: {\n        start: new Date(2022, 5, 1),\n        end: new Date(2023, 4, 31)\n      }\n    })} labels={{\n      totalCount: '{{count}} activities in 2022 & 2023'\n    }} />\n      <br />\n      <br />\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel,\n      interval: {\n        start: new Date(2023, 2, 8),\n        end: new Date(2023, 7, 1)\n      }\n    })} />\n      <br />\n      <br />\n      <ActivityCalendar {...args} data={[{\n      date: '2023-06-14',\n      count: 2,\n      level: 1\n    }, {\n      date: '2023-06-22',\n      count: 16,\n      level: 3\n    }, {\n      date: '2023-07-05',\n      count: 3,\n      level: 1\n    }, {\n      date: '2023-07-17',\n      count: 10,\n      level: 2\n    }]} />\n    </>\n}",...DateRanges.parameters?.docs?.source}}},ColorThemes.parameters={...ColorThemes.parameters,docs:{...ColorThemes.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    theme: {\n      light: ['hsl(0, 0%, 92%)', 'rebeccapurple'],\n      dark: ['hsl(0, 0%, 22%)', 'hsl(225,92%,77%)']\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: exampleTheme\n      }\n    }\n  },\n  render: args => <Container>\n      <h1>Color themes</h1>\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel\n    })} style={{\n      margin: '2rem 0'\n    }} />\n      <p>\n        Use the{' '}\n        <code>\n          <b>theme</b>\n        </code>{' '}\n        prop to configure the calendar colors for the light and dark system{' '}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\">color scheme</a>.\n        Define each color scale{' '}\n        <LinkTo kind=\"react-activity-calendar\" name=\"explicit-theme\">\n          explicitly\n        </LinkTo>{' '}\n        by settings all colors (5 per default) or pass exactly two colors (the lowest and highest\n        intensity) to calculate a single-hue scale. For explicit themes the color count must match\n        the number of activity levels, which is controlled by the{' '}\n        <LinkTo kind=\"react-activity-calendar\" name=\"date-ranges\">\n          <code>maxLevel</code>\n        </LinkTo>{' '}\n        prop. Colors can be specified in any valid CSS format.\n      </p>\n      <p>\n        The colors for at least one scheme must be set. If undefined, the default theme is used. By\n        default, the calendar will select the current system color scheme, but you can enforce a\n        specific scheme with the{' '}\n        <a href=\"/?path=/docs/react-activity-calendar--docs\">\n          <code>colorScheme</code>\n        </a>{' '}\n        prop.\n      </p>\n      <Source code={exampleTheme} />\n    </Container>\n}",...ColorThemes.parameters?.docs?.source}}},ExplicitThemes.parameters={...ExplicitThemes.parameters,docs:{...ExplicitThemes.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    theme: explicitTheme\n  },\n  parameters: {\n    // maxLevel cannot be used for a static explicit theme\n    controls: {\n      exclude: ['maxLevel']\n    },\n    docs: {\n      source: {\n        code: exampleThemeExplicit\n      }\n    }\n  },\n  render: args => <Container>\n      <h1>Explicit theme</h1>\n      <p></p>\n      <p>\n        See the{' '}\n        <LinkTo kind=\"react-activity-calendar\" name=\"color-themes\">\n          WithTheme\n        </LinkTo>{' '}\n        story for details how to use the <code>theme</code> prop.\n      </p>\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: 4\n    })} style={{\n      marginTop: '2rem'\n    }} />\n    </Container>\n}",...ExplicitThemes.parameters?.docs?.source}}},Customization.parameters={...Customization.parameters,docs:{...Customization.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    blockSize: 14,\n    blockRadius: 7,\n    blockMargin: 5,\n    fontSize: 16,\n    theme: explicitTheme\n  },\n  render: args => <ActivityCalendar {...args} data={generateData({\n    maxLevel: args.maxLevel\n  })} />,\n  parameters: {\n    // maxLevel cannot be used for a static explicit theme\n    controls: {\n      exclude: ['maxLevel']\n    },\n    docs: {\n      source: {\n        code: exampleCustomization\n      }\n    }\n  }\n}",...Customization.parameters?.docs?.source}}},EventHandlers.parameters={...EventHandlers.parameters,docs:{...EventHandlers.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    eventHandlers: {\n      onClick: () => activity => alert(JSON.stringify(activity)),\n      onMouseEnter: () => () => console.log('on mouse enter')\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: exampleEventHandlers\n      }\n    }\n  },\n  render: args => <Container>\n      <h1>Event Handlers</h1>\n      <p>\n        You can register event handlers for the SVG <code>&lt;rect/&gt;</code> elements that are\n        used to render the calendar days. This way you can control the behaviour on click, hover,\n        etc. All event listeners have the following signature, so you can use the activity data of\n        the block inside the handler:\n      </p>\n      <Source code={exampleEventHandlersInterface} />\n      <p>Click on any block below to see it in action:</p>\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel\n    })} style={{\n      margin: '2rem 0'\n    }} />\n      <Source code={exampleEventHandlers} />\n    </Container>\n}",...EventHandlers.parameters?.docs?.source}}},Tooltips.parameters={...Tooltips.parameters,docs:{...Tooltips.parameters?.docs,source:{originalSource:"{\n  args: defaultProps,\n  parameters: {\n    docs: {\n      source: {\n        code: exampleTooltipsReact\n      }\n    }\n  },\n  render: args => <Container>\n      <h1>Tooltip Examples</h1>\n      <p>\n        To add a 3rd party tooltip component to the calendar you can use the{' '}\n        <code>renderBlock</code> prop.\n      </p>\n      <h2>\n        <a href=\"https://mui.com/material-ui/react-tooltip/\">Material UI</a>\n      </h2>\n      <p>\n        In the simplest case, each block only needs to be wrapped with a{' '}\n        <code>&lt;Tooltip/&gt;</code> component, as shown here for Material UI:\n      </p>\n      <Source code={exampleTooltipsMui} />\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel\n    })} renderBlock={(block, activity) => <MuiTooltip title={`${activity.count} activities on ${activity.date}`}>\n            {block}\n          </MuiTooltip>} />\n      <h2>\n        <a href=\"https://github.com/ReactTooltip/react-tooltip\">react-tooltip</a>\n      </h2>\n      <p>\n        Some libraries, like <code>react-tooltip</code>, require that additional props are passed to\n        the block elements. You can achieve this using the <code>React.cloneElement</code> function:\n      </p>\n      <Source code={exampleTooltipsReact} />\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel\n    })} renderBlock={(block, activity) => cloneElement(block, {\n      'data-tooltip-id': 'react-tooltip',\n      'data-tooltip-html': `${activity.count} activities on ${activity.date}`\n    })} />\n      <ReactTooltip id=\"react-tooltip\" />\n    </Container>\n}",...Tooltips.parameters?.docs?.source}}},WithoutLabels.parameters={...WithoutLabels.parameters,docs:{...WithoutLabels.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    hideMonthLabels: true,\n    hideColorLegend: true,\n    hideTotalCount: true\n  },\n  render: args => <ActivityCalendar {...args} data={generateData({\n    maxLevel: args.maxLevel\n  })} />,\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} hideMonthLabels hideColorLegend hideTotalCount />'\n      }\n    }\n  }\n}",...WithoutLabels.parameters?.docs?.source}}},WeekdayLabels.parameters={...WeekdayLabels.parameters,docs:{...WeekdayLabels.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    showWeekdayLabels: true\n  },\n  render: args => <ActivityCalendar {...args} data={generateData({\n    maxLevel: args.maxLevel\n  })} />,\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} showWeekdayLabels />'\n      }\n    }\n  }\n}",...WeekdayLabels.parameters?.docs?.source}}},LocalizedLabels.parameters={...LocalizedLabels.parameters,docs:{...LocalizedLabels.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    showWeekdayLabels: true,\n    labels: {\n      months: ['Jan', 'Feb', 'Mär', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sep', 'Okt', 'Nov', 'Dez'],\n      weekdays: ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'],\n      totalCount: '{{count}} Aktivitäten in {{year}}',\n      legend: {\n        less: 'Weniger',\n        more: 'Mehr'\n      }\n    }\n  },\n  parameters: {\n    docs: {\n      source: {\n        code: exampleLabels\n      }\n    }\n  },\n  render: args => <Container>\n      <h1>Localization</h1>\n      <p>(Example in German)</p>\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel\n    })} style={{\n      margin: '2rem 0'\n    }} />\n      <Source code={exampleLabelsShape} language=\"jsx\" />\n    </Container>\n}",...LocalizedLabels.parameters?.docs?.source}}},MondayAsWeekStart.parameters={...MondayAsWeekStart.parameters,docs:{...MondayAsWeekStart.parameters?.docs,source:{originalSource:"{\n  args: {\n    ...defaultProps,\n    weekStart: 1\n  },\n  render: args => <ActivityCalendar {...args} data={generateData({\n    maxLevel: args.maxLevel\n  })} />,\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} weekStart={1} />'\n      }\n    }\n  }\n}",...MondayAsWeekStart.parameters?.docs?.source}}},NarrowScreens.parameters={...NarrowScreens.parameters,docs:{...NarrowScreens.parameters?.docs,source:{originalSource:"{\n  args: defaultProps,\n  parameters: {\n    docs: {\n      source: {\n        code: '<ActivityCalendar data={data} />'\n      }\n    }\n  },\n  render: args => <div style={{\n    width: 480,\n    maxWidth: '100%',\n    border: 'dashed 1px #929292'\n  }}>\n      <ActivityCalendar {...args} data={generateData({\n      maxLevel: args.maxLevel\n    })} />\n    </div>\n}",...NarrowScreens.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Loading","ActivityLevels","DateRanges","ColorThemes","ExplicitThemes","Customization","EventHandlers","Tooltips","WithoutLabels","WeekdayLabels","LocalizedLabels","MondayAsWeekStart","NarrowScreens"]},"./node_modules/.pnpm/css-loader@6.8.1_webpack@5.89.0/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[7].use[1]!./node_modules/.pnpm/sass-loader@13.3.2_sass@1.69.5_webpack@5.89.0/node_modules/sass-loader/dist/cjs.js!./src/styles/styles.module.css":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_pnpm_css_loader_6_8_1_webpack_5_89_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/css-loader@6.8.1_webpack@5.89.0/node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_pnpm_css_loader_6_8_1_webpack_5_89_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_pnpm_css_loader_6_8_1_webpack_5_89_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_pnpm_css_loader_6_8_1_webpack_5_89_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/css-loader@6.8.1_webpack@5.89.0/node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_pnpm_css_loader_6_8_1_webpack_5_89_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_node_modules_pnpm_css_loader_6_8_1_webpack_5_89_0_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".wUVq1OjRTLGSWXepGjlQ{width:max-content;max-width:100%;display:flex;flex-direction:column;gap:8px}.wUVq1OjRTLGSWXepGjlQ rect{stroke:rgba(0,0,0,.08);stroke-width:1px;shape-rendering:geometricPrecision}@media(prefers-color-scheme: dark){.wUVq1OjRTLGSWXepGjlQ rect{stroke:rgba(255,255,255,.04)}}.ntNkVgAOLFKz0T2BceDZ{max-width:100%;overflow-x:auto;overflow-y:hidden}.GvDc4UkRGUx9k1xJ7F3K{display:block;overflow:visible}.GvDc4UkRGUx9k1xJ7F3K text{fill:currentColor}.vgnoQnLcM92uNFQzODbM{display:flex;flex-wrap:wrap;gap:4px 16px;white-space:nowrap}.LVpFNgW8fL1FQgYS505R{margin-left:auto;display:flex;align-items:center;gap:3px}@keyframes uy9ZjXPtYDnhasTewUYH{0%{fill:var(--react-activity-calendar-loading)}50%{fill:var(--react-activity-calendar-loading-active)}100%{fill:var(--react-activity-calendar-loading)}}","",{version:3,sources:["webpack://./src/styles/styles.module.css"],names:[],mappings:"AAAA,sBACE,iBAAA,CACA,cAAA,CACA,YAAA,CACA,qBAAA,CACA,OAAA,CAGF,2BACE,sBAAA,CACA,gBAAA,CACA,kCAAA,CAGF,mCACE,2BACE,4BAAA,CAAA,CAIJ,sBACE,cAAA,CACA,eAAA,CACA,iBAAA,CAGF,sBACE,aAAA,CACA,gBAAA,CAGF,2BACE,iBAAA,CAGF,sBACE,YAAA,CACA,cAAA,CACA,YAAA,CACA,kBAAA,CAGF,sBACE,gBAAA,CACA,YAAA,CACA,kBAAA,CACA,OAAA,CAGF,gCACE,GACE,2CAAA,CAEF,IACE,kDAAA,CAEF,KACE,2CAAA,CAAA",sourcesContent:[".container {\n  width: max-content; /* Calendar should not grow */\n  max-width: 100%; /* Do not remove - flexbox parents */\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.container rect {\n  stroke: rgba(0, 0, 0, 0.08);\n  stroke-width: 1px;\n  shape-rendering: geometricPrecision;\n}\n\n@media (prefers-color-scheme: dark) {\n  .container rect {\n    stroke: rgba(255, 255, 255, 0.04);\n  }\n}\n\n.scrollContainer {\n  max-width: 100%;\n  overflow-x: auto;\n  overflow-y: hidden;\n}\n\n.calendar {\n  display: block; /* SVGs are inline-block by default */\n  overflow: visible; /* Weekday labels are rendered left of the container */\n}\n\n.calendar text {\n  fill: currentColor;\n}\n\n.footer {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px 16px;\n  white-space: nowrap;\n}\n\n.legendColors {\n  margin-left: auto;\n  display: flex;\n  align-items: center;\n  gap: 3px;\n}\n\n@keyframes loadingAnimation {\n  0% {\n    fill: var(--react-activity-calendar-loading);\n  }\n  50% {\n    fill: var(--react-activity-calendar-loading-active);\n  }\n  100% {\n    fill: var(--react-activity-calendar-loading);\n  }\n}\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={container:"wUVq1OjRTLGSWXepGjlQ",scrollContainer:"ntNkVgAOLFKz0T2BceDZ",calendar:"GvDc4UkRGUx9k1xJ7F3K",footer:"vgnoQnLcM92uNFQzODbM",legendColors:"LVpFNgW8fL1FQgYS505R",loadingAnimation:"uy9ZjXPtYDnhasTewUYH"};const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___}}]);